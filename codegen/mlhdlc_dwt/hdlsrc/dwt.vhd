-- -------------------------------------------------------------
-- 
-- File Name: D:\Downloads\Research\be\code\codegen\mlhdlc_dwt\hdlsrc\dwt.vhd
-- Created: 2022-04-28 14:31:24
-- 
-- Generated by MATLAB 9.4, MATLAB Coder 4.0 and HDL Coder 3.12
-- 
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: dwt
-- Source Path: 
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.mlhdlc_dwt_fixpt_pkg.ALL;

ENTITY dwt IS
  PORT( x_in                              :   IN    vector_of_std_logic_vector14(0 TO 7);  -- sfix14_En12 [8]
        tmp                               :   OUT   vector_of_std_logic_vector14(0 TO 7)  -- sfix14_En12 [8]
        );
END dwt;


ARCHITECTURE rtl OF dwt IS

  -- Component Declarations
  COMPONENT conv
    PORT( c                               :   IN    vector_of_std_logic_vector14(0 TO 14);  -- sfix14_En12 [15]
          h1                              :   IN    vector_of_std_logic_vector14(0 TO 7);  -- sfix14_En13 [8]
          tmp                             :   OUT   vector_of_std_logic_vector14(0 TO 21)  -- sfix14_En12 [22]
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : conv
    USE ENTITY work.conv(rtl);

  -- Constants
  CONSTANT nc                             : vector_of_signed14(0 TO 7) := 
    (to_signed(-16#0057#, 14), to_signed(-16#010E#, 14), to_signed(16#00FC#, 14), to_signed(16#05FC#, 14),
     to_signed(-16#00E6#, 14), to_signed(-16#1431#, 14), to_signed(16#16E0#, 14), to_signed(-16#0760#, 14));  -- sfix14 [8]
  CONSTANT h1_2                           : vector_of_signed14(0 TO 7) := 
    (to_signed(-16#0760#, 14), to_signed(16#16E0#, 14), to_signed(-16#1431#, 14), to_signed(-16#00E6#, 14),
     to_signed(16#05FC#, 14), to_signed(16#00FC#, 14), to_signed(-16#010E#, 14), to_signed(-16#0057#, 14));  -- sfix14 [8]
  CONSTANT tmp_5                          : vector_of_signed14(0 TO 3) := 
    (to_signed(16#0760#, 14), to_signed(16#1431#, 14), to_signed(-16#05FC#, 14), to_signed(16#010E#, 14));  -- sfix14 [4]

  -- Signals
  SIGNAL x_in_signed                      : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]
  SIGNAL c                                : vector_of_signed14(0 TO 14);  -- sfix14_En12 [15]
  SIGNAL c_1                              : vector_of_std_logic_vector14(0 TO 14);  -- ufix14 [15]
  SIGNAL tmp_1                            : vector_of_signed14(0 TO 7);  -- sfix14_En13 [8]
  SIGNAL tmp_2                            : vector_of_std_logic_vector14(0 TO 7);  -- ufix14 [8]
  SIGNAL tmp_3                            : vector_of_std_logic_vector14(0 TO 21);  -- ufix14 [22]
  SIGNAL tmp_signed                       : vector_of_signed14(0 TO 21);  -- sfix14_En12 [22]
  SIGNAL c_2                              : vector_of_std_logic_vector14(0 TO 14);  -- ufix14 [15]
  SIGNAL h1                               : vector_of_signed14(0 TO 7);  -- sfix14_En13 [8]
  SIGNAL h1_1                             : vector_of_std_logic_vector14(0 TO 7);  -- ufix14 [8]
  SIGNAL tmp_4                            : vector_of_std_logic_vector14(0 TO 21);  -- ufix14 [22]
  SIGNAL tmp_signed_1                     : vector_of_signed14(0 TO 21);  -- sfix14_En12 [22]
  SIGNAL g                                : vector_of_signed14(0 TO 7);  -- sfix14_En12 [8]

BEGIN
  u_conv : conv
    PORT MAP( c => c_1,  -- sfix14_En12 [15]
              h1 => tmp_2,  -- sfix14_En13 [8]
              tmp => tmp_3  -- sfix14_En12 [22]
              );

  -- HDL code generation from MATLAB function: mlhdlc_dwt_fixpt
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  --                                                                          %
  -- 
  --           Generated by MATLAB 9.4 and Fixed-Point Designer 6.1           %
  -- 
  --                                                                          %
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- MATLAB design: 8-point Discrete WT
  -- 
  -- 
  -- 
  -- Introduction:
  -- 
  -- Performs and returns the DWT of the input TDM signals as a part of Transmultiplexer operation
  -- 
  -- to be transmitted over a communications channel
  -- 
  -- 'mlhdlc_dwt_fixpt:14' fm = get_fimath();
  -- 
  -- 'mlhdlc_dwt_fixpt:16' hid = fi([-0.230377813308855 0.714846570552542 -0.630880767929591 -0.0279837694169839 0.187034811718881 
  -- 0.0308413818359870 -0.0328830116669830 -0.0105974017849973], 1, 14, 13, fm)
  -- 
  -- declare and initialize the delay registers
  -- 
  -- persistent ud1 ud2 ud3 ud4 ud5 ud6 ud7 ud8;
  -- 
  -- if isempty(ud1)
  -- 
  --     ud1 = 0; ud2 = 0; ud3 = 0; ud4 = 0; ud5 = 0; ud6 = 0; ud7 = 0; ud8 = 0;
  -- 
  -- end
  -- 
  -- access the previous value of states/registers
  -- 
  -- a1 = ud1;
  -- 
  -- a2 = ud2;
  -- 
  -- a3 = ud3;
  -- 
  -- a4 = ud4;
  -- 
  -- a5 = ud5;
  -- 
  -- a6 = ud6;
  -- 
  -- a7 = ud7;
  -- 
  -- a8 = ud8;
  -- 
  -- x = [a1 a2 a3 a4 a5 a6 a7 a8];
  -- 
  -- DWT of the output
  -- 
  -- 'mlhdlc_dwt_fixpt:37' y_out = fi(dwt(x_in,hid), 1, 14, 12, fm);
  u_conv_1 : conv
    PORT MAP( c => c_2,  -- sfix14_En12 [15]
              h1 => h1_1,  -- sfix14_En13 [8]
              tmp => tmp_4  -- sfix14_En12 [22]
              );

  outputgen7: FOR k IN 0 TO 7 GENERATE
    x_in_signed(k) <= signed(x_in(k));
  END GENERATE;

  -- HDL code generation from MATLAB function: dwt
  -- 
  --  function g = dwt(f,h,NJ); Calculates the DWT of periodic  f
  -- 
  --  with scaling filter  h
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- This script/function was created by 
  -- 
  -- Abdullah Al Muhit
  -- 
  -- contact - almuhit@gmail.com
  -- 
  -- website - https://sites.google.com/site/almuhit/
  -- 
  -- Please use it at your own risk. Also, Please cite the following paper:
  -- 
  -- A A Muhit, M S Islam, and M Othman, “VLSI Implementation of Discrete Wavelet Transform (DWT) for Image Compression”, 
  -- in Proc. of The Second International Conference on Autonomous Robots and Agents, Palmerston North, New Zealand, 
  -- pp. 391-395, 2004, ISBN 0-476-00994-4. [PDF
  -- 
  -- A A Muhit, M S Islam, and M Othman, “ Design Design and Analysis of Discrete Wavelet Transform (DWT) for Image 
  -- Compression Using VHDL”, in Proc. of the International Conference on Parallel and Distributed Processing Techniques 
  -- and Applications, PDPTA 2005, Volume 1. CSREA Press 2005, pp. 157-160, Las Vegas, Nevada, USA, 2005, ISBN 1-932415-58-0. 
  -- [PDF
  -- 
  -- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  -- 
  -- 'mlhdlc_dwt_fixpt:68' fm = get_fimath();
  -- 
  -- 'mlhdlc_dwt_fixpt:70' N = fi(length(h), 0, 4, 0, fm);
  -- 
  -- 'mlhdlc_dwt_fixpt:70' L = fi(length(f), 0, 4, 0, fm);
  -- 
  -- 'mlhdlc_dwt_fixpt:71' c = fi(f, 1, 14, 12, fm);
  -- 
  -- Wavelet filter
  -- 
  -- 'mlhdlc_dwt_fixpt:75' L(:) = length(c);
  -- 
  -- 'mlhdlc_dwt_fixpt:76' c = fi([fi(c(mod((fi_uminus((fi_signed(N)-fi(1, 0, 1, 0, fm))):fi(-1, 1, 2, 0, fm)),L)+fi(1, 
  -- 0, 1, 0, fm)), 1, 14, 12, fm) c], 1, 14, 12, fm)
  c(0 TO 6) <= x_in_signed(1 TO 7);
  c(7 TO 14) <= x_in_signed(0 TO 7);

  outputgen6: FOR k IN 0 TO 14 GENERATE
    c_1(k) <= std_logic_vector(c(k));
  END GENERATE;

  -- Convolve & d-sample
  -- 
  -- 'mlhdlc_dwt_fixpt:82' c = fi(conv(c,h0), 1, 14, 12, fm);
  tmp_1 <= nc;

  outputgen5: FOR k IN 0 TO 7 GENERATE
    tmp_2(k) <= std_logic_vector(tmp_1(k));
  END GENERATE;

  outputgen4: FOR k IN 0 TO 21 GENERATE
    tmp_signed(k) <= signed(tmp_3(k));
  END GENERATE;

  outputgen3: FOR k IN 0 TO 14 GENERATE
    c_2(k) <= std_logic_vector(c(k));
  END GENERATE;

  -- 'mlhdlc_dwt_fixpt:72' h0  = fi(fliplr(h), 1, 14, 13, fm);
  -- 
  -- Scaling filter
  -- 
  -- 'mlhdlc_dwt_fixpt:73' h1 = fi(h, 1, 14, 13, fm);
  -- 
  -- 'mlhdlc_dwt_fixpt:73' h1(fi(1, 0, 1, 0, fm):fi(2, 0, 2, 0, fm):N) = fi_uminus(h1(fi(1, 0, 1, 0, fm):fi(2, 0, 2, 
  -- 0, fm):N))
  p5h1_output : PROCESS 
    VARIABLE cast : vector_of_signed64(0 TO 3);
  BEGIN
    h1 <= h1_2;

    FOR t_0 IN 0 TO 3 LOOP
      cast(t_0) := resize(to_signed(t_0, 32) & '0', 64);
      h1(to_integer(resize(cast(t_0), 31))) <= tmp_5(t_0);
    END LOOP;

    WAIT;
  END PROCESS p5h1_output;


  outputgen2: FOR k IN 0 TO 7 GENERATE
    h1_1(k) <= std_logic_vector(h1(k));
  END GENERATE;

  outputgen1: FOR k IN 0 TO 21 GENERATE
    tmp_signed_1(k) <= signed(tmp_4(k));
  END GENERATE;

  -- 'mlhdlc_dwt_fixpt:81' d = fi(d(N:fi(2, 0, 2, 0, fm):(fi_signed(N+L)-fi(2, 0, 2, 0, fm))), 1, 14, 12, fm);
  -- 
  -- 'mlhdlc_dwt_fixpt:82' c = fi(c(N:fi(2, 0, 2, 0, fm):(fi_signed(N+L)-fi(2, 0, 2, 0, fm))), 1, 14, 12, fm);
  -- 
  -- Convolve & d-sample
  -- 
  -- 'mlhdlc_dwt_fixpt:84' g = fi([fi(c, 1, 14, 12, fm),d], 1, 14, 12, fm);
  -- 
  -- The DWT
  p2g_output : PROCESS (tmp_signed, tmp_signed_1)
    VARIABLE add_cast : vector_of_signed64(0 TO 3);
    VARIABLE add_cast_0 : vector_of_signed64(0 TO 3);
  BEGIN

    FOR t_01 IN 0 TO 3 LOOP
      add_cast(t_01) := resize(to_signed(t_01, 32) & '0', 64);
      g(t_01) <= tmp_signed(to_integer(7 + resize(add_cast(t_01), 32)));
      add_cast_0(t_01) := resize(to_signed(t_01, 32) & '0', 64);
      g(t_01 + 4) <= tmp_signed_1(to_integer(7 + resize(add_cast_0(t_01), 32)));
    END LOOP;

  END PROCESS p2g_output;


  outputgen: FOR k IN 0 TO 7 GENERATE
    tmp(k) <= std_logic_vector(g(k));
  END GENERATE;

END rtl;

